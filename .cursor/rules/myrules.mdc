---
description: 
globs: 
alwaysApply: true
---

# Your rule content
ðŸ”’ Access & Auth
	â€¢	Group access is protected with a simple password gate (handled in code).
	â€¢	Only the admin (you) can create new groups via an /admin route protected by a hardcoded password.
	â€¢	No Supabase Auth, Resend, or Edge Functions are used.

ðŸ’» Code Quality
	â€¢	Every file must compile without TypeScript or ESLint errors before merging to main.
	â€¢	All pages under /app must explicitly validate params and searchParams types using zod or inferred route types.
	â€¢	Every catch block must use (error: unknown) and safely handle error type checks.
	â€¢	Search and remove unused imports or variables regularly.
	â€¢	Run this before pushing:
	npm run build && npm run lint && tsc --noEmit
		â€¢	You can wrap that in a script named check-before-push and connect it to a Husky pre-push hook.
	ðŸ§¹ Project Hygiene
	â€¢	No auth packages, Resend config, or Edge Function files should exist.
	â€¢	Use .env.local for local secrets only (e.g. ADMIN_PASSWORD, fallback URLs)
	â€¢	Use Vercel Dashboard for production environment variables.
	â€¢	If using Prisma:
	â€¢	Run npx prisma format and npx prisma generate after any schema change.
	â€¢	Seed scripts must run without errors before pushing.

ðŸš« Do NOT:
	â€¢	Add .github/workflows for GitHub Pages
	â€¢	Use the gh-pages npm package
	â€¢	Add output: 'export' to next.config.js
	â€¢	Push to main unless the branch builds successfully in preview

âœ… DO:
	â€¢	Use Next.js with Vercel SSR and file-based routing
	â€¢	Use Prisma + SQLite or Supabase (just as a database)
	â€¢	Use Shadcn UI for a clean interface
	â€¢	Keep main as the production branch
	â€¢	Deploy only via Vercelâ€™s GitHub integration

